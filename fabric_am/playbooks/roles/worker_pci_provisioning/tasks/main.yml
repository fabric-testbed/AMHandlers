---
# /tasks/main.yml
#
# ansible-galaxy collection install community.libvirt

- name: Create file to add device
  template:
    src: device.j2
    dest: /tmp/{{ device }}.yml
    mode: 0600
  when: mac is not defined and (operation == 'attach' or operation == 'detach')

- name: Create file to add device
  template:
    src: device_with_mac.j2
    dest: /tmp/{{ device }}.yml
    mode: 0600
  when: mac is defined and (operation == 'attach' or operation == 'detach')

- name: Add PCI Card to VM
  ansible.builtin.shell:
    virsh attach-device {{ kvmguest_name }} /tmp/{{ device }}.yml --live --persistent
  when: operation == 'attach'

- name: Remove PCI Card to VM
  ansible.builtin.shell:
    virsh detach-device {{ kvmguest_name }} /tmp/{{ device }}.yml --live --persistent
  when: operation == 'detach'

- name: Delete file
  file:
    path: /tmp/{{ device }}.yml
    state: absent
  when: operation == 'attach' or operation == 'detach'

- name: Get PCI Device Number from the Host
  ansible.builtin.shell:
    lspci -n | grep {{ bdf }} | awk '{print $3}'
  when: operation == 'attach'
  register: pci_device_number

- set_fact:
    pci_device_number: "{{ pci_device_number.stdout }}"
  when: operation == 'attach'

- name: Start a VM
  community.libvirt.virt:
    name: "{{ kvmguest_name }}"
    state: running
  when: operation == 'start'

- name: Shutdown a VM
  community.libvirt.virt:
    name: "{{ kvmguest_name }}"
    state: shutdown
  when: operation == 'stop'

- name: Get CPU info of a Host
  ansible.builtin.shell:
    lscpu -e=cpu,node
  register: cpuinfo_host
  when: operation == 'cpuinfo'

- name: Get vCPU info of a VM
  ansible.builtin.shell:
    virsh vcpuinfo {{ kvmguest_name }}
  register: cpuinfo_vm
  when: operation == 'cpuinfo'

- set_fact:
    cpuinfo_host: "{{ cpuinfo_host.stdout_lines }}"
    cpuinfo_vm: "{{ cpuinfo_vm.stdout_lines }}"
  when: operation == 'cpuinfo'

- name: Get NUMA statistics of the host
  ansible.builtin.shell:
    numactl -H
  register: numainfo_host
  when: operation == 'numainfo'

- name: Get NUMA statistics of a VM
  ansible.builtin.shell:
    numastat -c -s {{ kvmguest_name }}
  register: numainfo_vm
  when: operation == 'numainfo'

- set_fact:
    numainfo_host: "{{ numainfo_host.stdout_lines }}"
    numainfo_vm: "{{ numainfo_vm.stdout_lines }}"
  when: operation == 'numainfo'

- name: Pin vCpu to host cpus for a VM
  ansible.builtin.shell:
    virsh vcpupin {{ kvmguest_name }} {{ item.vcpu }} {{ item.cpu }} --live --config
  loop: "{{ cpu_list }}"
  when: operation == 'cpupin'

- name: Pin memory to numa node for a VM
  ansible.builtin.shell:
    virsh numatune {{ kvmguest_name }} --nodeset {{ nodeset }} --live --config
  when: operation == 'numatune'