---
# /tasks/main.yml
#
# ansible-galaxy collection install community.libvirt

- name: Create file to add device
  template:
    src: device.j2
    dest: /tmp/{{ device }}.yml
    mode: 0600
  when: mac is not defined and (operation == 'attach' or operation == 'detach')

- name: Create file to add device
  template:
    src: device_with_mac.j2
    dest: /tmp/{{ device }}.yml
    mode: 0600
  when: mac is defined and (operation == 'attach' or operation == 'detach')

- name: Add PCI Card to VM
  ansible.builtin.shell:
    virsh attach-device {{ kvmguest_name }} /tmp/{{ device }}.yml --live --config
  when: operation == 'attach'

- name: Remove PCI Card to VM
  ansible.builtin.shell:
    virsh detach-device {{ kvmguest_name }} /tmp/{{ device }}.yml --live --config
  when: operation == 'detach'

- name: Delete file
  file:
    path: /tmp/{{ device }}.yml
    state: absent
  when: operation == 'attach' or operation == 'detach'

- name: Get PCI Device Number from the Host
  ansible.builtin.shell:
    lspci -n | grep {{ bdf }} | awk '{print $3}'
  when: operation == 'attach'
  register: pci_device_number

- set_fact:
    pci_device_number: "{{ pci_device_number.stdout }}"
  when: operation == 'attach'

- name: Start a VM
  community.libvirt.virt:
    name: "{{ kvmguest_name }}"
    state: running
  when: operation == 'start'

- name: Shutdown a VM
  community.libvirt.virt:
    name: "{{ kvmguest_name }}"
    state: shutdown
  when: operation == 'stop'

- name: Get vCPU info of a VM
  ansible.builtin.shell:
    virsh vcpuinfo "{{ kvmguest_name }}"
  register: vcpuinfo
  when: operation == 'vcpuinfo'

- set_fact:
    vcpuinfo: "{{ vcpuinfo.stdout_lines }}"
  when: operation == 'vcpuinfo'

- name: Get NUMA statistics of a VM
  ansible.builtin.shell:
    numastat -c -s "{{ kvmguest_name }}"
  register: numastat
  when: operation == 'numastat'

- set_fact:
    numastat: "{{ numastat.stdout_lines }}"
  when: operation == 'numastat'
