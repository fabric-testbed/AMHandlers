---
# MIT License
#
# Copyright (c) 2022 FABRIC Testbed
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
#
# Author: Liang Zhang (lzhang9@es.net)
# /tasks/create-vrt.yml
#

- name: Initialize encoded list
  set_fact:
    urlcode_l3_endpoints: []
    
- name: Create a list of encoded endpoints
  set_fact:
    urlcode_l3_endpoints: "{{ urlcode_l3_endpoints + [item | to_json | urlencode ] }}"
  with_items: "{{ l3_endpoints }}"
    
- name: Create the url string of endpoints
  set_fact:
    string_l3_endpoints: "{{ urlcode_l3_endpoints | join('&endpoint=') }}"
  
- name: Print url string for endpoint parameter
  debug:
    msg: "&endpoint={{ string_l3_endpoints }}"
    
- name: Create L3 connections
  ansible.builtin.uri:
    url: "{{ oess_url }}/vrf.cgi?method=provision&name={{ name }}&description={{ description }}&local_asn={{ asn }}&workgroup_id={{ workgroup_id }}&endpoint={{ string_l3_endpoints }}"
    user: "{{ oess_user }}"
    password: "{{ oess_passwd }}"
    headers:
      Accept: application/json
      content-type: application/json
    status_code: 200
    method: GET
    validate_certs: no
  register: provision_result
  failed_when: "('error' in provision_result.json)"
  
- name: Print L3 connection provision result
  debug:
    msg: "{{ provision_result }}"
