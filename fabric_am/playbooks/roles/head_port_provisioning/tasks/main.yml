---
# MIT License
#
# Copyright (c) 2020 FABRIC Testbed
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
#
# Author: Komal Thareja (kthare10@renci.org)
# /tasks/main.yml
#

# Create a port
- name: Create a port for a network
  openstack.cloud.port:
    state: present
    auth:
      auth_url: "{{ auth_url }}"
      password: "{{ password }}"
      project_name: "{{ project_name }}"
      username: "{{ username }}"
    name: "{{ portname }}"
    network: "{{ networkname }}"
    port_security_enabled: no
    mac_address: "{{ mac }}"
  when: port_prov_op == 'create' and ip_address is not defined

- name: Create a port for a network
  openstack.cloud.port:
    state: present
    auth:
      auth_url: "{{ auth_url }}"
      password: "{{ password }}"
      project_name: "{{ project_name }}"
      username: "{{ username }}"
    name: "{{ portname }}"
    network: "{{ networkname }}"
    port_security_enabled: no
    mac_address: "{{ mac }}"
    ip_address: "{{ ip_address }}"
  when: port_prov_op == 'create' and ip_address is defined

# Connects the VLans port with the VM using their ID's
- name: Connects VM to the port
  ansible.builtin.command: openstack server add port "{{ vmname }}" "{{ portname }}"
  when: port_prov_op == 'create'

# Detaches a VM from port using their ID's
- name: Removes VM from port
  ansible.builtin.command: openstack server remove port "{{ vmname }}" "{{ portname }}"
  when: port_prov_op == 'detach'

# Deletes a port using its name
- name: Delete a port for a network
  openstack.cloud.port:
    state: absent
    auth:
      auth_url: "{{ auth_url }}"
      password: "{{ password }}"
      project_name: "{{ project_name }}"
      username: "{{ username }}"
    name: "{{ portname }}"
  when: port_prov_op == 'delete' or port_prov_op == 'detach'

- name: List all Ports
  openstack.cloud.port_info:
    auth:
      auth_url: "{{ auth_url }}"
      password: "{{ password }}"
      project_name: "{{ project_name }}"
      username: "{{ username }}"
  register: result
  when: port_prov_op == 'delete_all' or port_prov_op == 'list'
